name: CICD
          
on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "develop" ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4.0.1
        with:
          dotnet-version: '9.0.x'

      - name: Run build
        shell: pwsh
        run: .\build.ps1

      - name: Upload nupkg
        uses: actions/upload-artifact@v4.6.2
        with:
          name: jdrst.Localizer.v${{ env.GitBuildVersionSimple }}.nupkg
          path: src/Localizer/bin/Release/*.nupkg
      - name: Set job outputs
        id: setOutputs
        run: echo "tag=v${{ env.GitBuildVersionSimple }}" >> $GITHUB_OUTPUT
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4.3.0
      with:
        name: jdrst.Localizer.${{ needs.build.outputs.tag }}.nupkg
        path: artifacts

    - name: Create release
      uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
      with:
       artifacts: "artifacts/*.nupkg"
       token: ${{ secrets.GITHUB_TOKEN }}        
       tag: "${{ needs.build.outputs.tag }}"
          
    - name: Publish the package to nuget.org
      run: dotnet nuget push artifacts/*.nupkg -k $NUGET_AUTH_TOKEN -s https://api.nuget.org/v3/index.json
    env:
      NUGET_AUTH_TOKEN: ${{ secrets.NUGET_TOKEN }}


          
